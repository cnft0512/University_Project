<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.university.mapper.AdminMapper">

	<!-- 강의 조회 -->
	<select id="getList" resultType="com.university.model.LectureVO">
      <![CDATA[
          select * from lecture 
      ]]>
		<if test="keyword != null">
			<foreach collection="typeArr" item="type">
				<choose>
					<when test="type == 'N'.toString()">
						where lecture_name like '%'||#{keyword}||'%'
					</when>
					<when test="type == 'C'.toString()">
						where lecture_code like '%'||#{keyword}||'%'
					</when>
					<when test="type == 'P'.toString()">
						where professor_name like '%'||#{keyword}||'%'
					</when>
					<when test="type == 'S'.toString()">
						where semester like '%'||#{keyword}||'%'
					</when>
				</choose>
			</foreach>
		</if>
      <![CDATA[
      	 order by lecture_code asc
      ]]>
	</select>
	
	<select id="getDepartList" resultType="com.university.model.DepartmentVO">
		select * from department
	</select>

	<select id="getStudentList" resultType="com.university.model.StudentVO">
		select * from student where depart_code not in 10 order by id asc
	</select>

	<insert id="insert_student">
		insert into student(name,depart_code,depart_name,birth,post,address_1,address_2,email,phone,create_date)
		values(#{name},#{depart_code},#{depart_name},#{birth},#{post},#{address_1},#{address_2},#{email},#{phone},sysdate)
	</insert>

	<update id="update_studentId">
		update student set id = concat(#{id}, lpad(id_seq.nextval,3,0)),
		password = #{password} where name = #{name} and depart_code = #{depart_code} 
		<!-- and address_2 = #{address_2} -->
		<!-- #{id} = create_date의 year + depart_code -->
		<!-- update student set id=#{id}, password=#{password} where name=#{name} -->
	</update>

	<select id="getLectureInfo" resultType="com.university.model.LectureVO">
		select * from lecture where lecture_code = #{lecture_code}
	</select>

	<select id="getStudent_lectureList" resultType="com.university.model.StudentLectureVO">
		select * from student_lecture where lecture_code = #{lecture_code} order by id asc
	</select>
	
	<select id="getMyList" resultType="com.university.model.StudentLectureVO">
		select * from student_lecture order by lecture_code asc, lecture_year desc
	</select>

	<update id="update_mid_score">
		update student_lecture set midterm_exam = #{midterm_exam} where id = #{id} and lecture_code = #{lecture_code}
	</update>

	<update id="update_final_score">
		update student_lecture set final_exam = #{final_exam} where id = #{id} and lecture_code = #{lecture_code}
	</update>
	
	<insert id="copyBasketToStudent_lecture">
   		insert into student_lecture(id,lecture_code,lecture_name,professor_name,grade,classroom,lecture_time,lecture_year,semester)
    	select id,lecture_code,lecture_name,professor_name,grade,classroom,lecture_time,lecture_year,semester from basket
   	</insert>
   
   	<delete id = "deleteBasket">
      	delete from basket
   	</delete>

</mapper>